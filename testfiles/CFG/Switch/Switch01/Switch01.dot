digraph G {
graph [splines=ortho, nodesep="1", ranksep="1"]
node [shape=rect, fontname=Arial];
{ rank = same; "Program[0]"}
{ rank = same; "List[1]"}
{ rank = same; "CompilationUnit[2]"}
{ rank = same; "List[3]"; "List[4]"}
{ rank = same; "ClassDecl[5]"}
{ rank = same; "Modifiers[6]"; "Opt[9]"; "List[10]"; "List[11]"}
{ rank = same; "List[7]"; "MethodDecl[12]"}
{ rank = same; "Modifier[8]"; "Entry[13]"; "Modifiers[14]"; "PrimitiveTypeAccess[16]"; "List[17]"; "List[18]"; "Opt[19]"; "Exit[20]"}
{ rank = same; "List[15]"; "Block[20]"}
{ rank = same; "List[21]"}
{ rank = same; "VarDeclStmt[22]"; "SwitchStmt[31]"}
{ rank = same; "Modifiers[23]"; "PrimitiveTypeAccess[25]"; "List[26]"; "AssignSimpleExpr[32]"; "Block[35]"}
{ rank = same; "List[24]"; "VariableDeclarator[27]"; "VarAccess[33]"; "IntegerLiteral[34]"; "List[36]"}
{ rank = same; "List[28]"; "Opt[29]"; "ConstCase[37]"; "Block[39]"; "ConstCase[45]"; "ExprStmt[49]"; "ExprStmt[53]"; "DefaultCase[57]"; "ExprStmt[58]"}
{ rank = same; "IntegerLiteral[30]"; "IntegerLiteral[38]"; "List[40]"; "AddExpr[46]"; "AssignSimpleExpr[50]"; "AssignSimpleExpr[54]"; "AssignSimpleExpr[59]"}
{ rank = same; "ExprStmt[41]"; "IntegerLiteral[47]"; "IntegerLiteral[48]"; "VarAccess[51]"; "IntegerLiteral[52]"; "VarAccess[55]"; "IntegerLiteral[56]"; "VarAccess[60]"; "IntegerLiteral[61]"}
{ rank = same; "AssignSimpleExpr[42]"}
{ rank = same; "VarAccess[43]"; "IntegerLiteral[44]"}
"Program[0]" [label="Program\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[1]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"CompilationUnit[2]" [label="CompilationUnit\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[3]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[4]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"ClassDecl[5]" [label="ClassDecl\n < Switch01 >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Modifiers[6]" [label="Modifiers\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[7]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Modifier[8]" [label="Modifier\n < public >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Opt[9]" [label="Opt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[10]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[11]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"MethodDecl[12]" [label="MethodDecl\n < m >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Entry[13]" [label="Entry\n ", fillcolor=white   style=filled  ]
"Modifiers[14]" [label="Modifiers\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[15]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"PrimitiveTypeAccess[16]" [label="PrimitiveTypeAccess\n < void >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[17]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[18]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Opt[19]" [label="Opt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Block[20]" [label="Block\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[21]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"VarDeclStmt[22]" [label="VarDeclStmt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Modifiers[23]" [label="Modifiers\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[24]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"PrimitiveTypeAccess[25]" [label="PrimitiveTypeAccess\n < int >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[26]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"VariableDeclarator[27]" [label="VariableDeclarator\n < int a >", fillcolor=white   style=filled  ]
"List[28]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Opt[29]" [label="Opt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"IntegerLiteral[30]" [label="IntegerLiteral\n < 0 >", fillcolor=white   style=filled  ]
"SwitchStmt[31]" [label="SwitchStmt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"AssignSimpleExpr[32]" [label="AssignSimpleExpr\n < a >", fillcolor=white   style=filled  ]
"VarAccess[33]" [label="VarAccess\n < a >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"IntegerLiteral[34]" [label="IntegerLiteral\n < 1 >", fillcolor=white   style=filled  ]
"Block[35]" [label="Block\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[36]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"ConstCase[37]" [label="ConstCase\n < 1 >", fillcolor=white   style=filled  ]
"IntegerLiteral[38]" [label="IntegerLiteral\n < 1 >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"Block[39]" [label="Block\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"List[40]" [label="List\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"ExprStmt[41]" [label="ExprStmt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"AssignSimpleExpr[42]" [label="AssignSimpleExpr\n < a >", fillcolor=white   style=filled  ]
"VarAccess[43]" [label="VarAccess\n < a >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"IntegerLiteral[44]" [label="IntegerLiteral\n < 2 >", fillcolor=white   style=filled  ]
"ConstCase[45]" [label="ConstCase\n < org.extendj.ast.AddExpr >", fillcolor=white   style=filled  ]
"AddExpr[46]" [label="AddExpr\n < + >", fillcolor=white   style=filled  ]
"IntegerLiteral[47]" [label="IntegerLiteral\n < 1 >", fillcolor=white   style=filled  ]
"IntegerLiteral[48]" [label="IntegerLiteral\n < 1 >", fillcolor=white   style=filled  ]
"ExprStmt[49]" [label="ExprStmt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"AssignSimpleExpr[50]" [label="AssignSimpleExpr\n < a >", fillcolor=white   style=filled  ]
"VarAccess[51]" [label="VarAccess\n < a >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"IntegerLiteral[52]" [label="IntegerLiteral\n < 3 >", fillcolor=white   style=filled  ]
"ExprStmt[53]" [label="ExprStmt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"AssignSimpleExpr[54]" [label="AssignSimpleExpr\n < a >", fillcolor=white   style=filled  ]
"VarAccess[55]" [label="VarAccess\n < a >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"IntegerLiteral[56]" [label="IntegerLiteral\n < 4 >", fillcolor=white   style=filled  ]
"DefaultCase[57]" [label="DefaultCase\n ", fillcolor=white   style=filled  ]
"ExprStmt[58]" [label="ExprStmt\n ", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"AssignSimpleExpr[59]" [label="AssignSimpleExpr\n < a >", fillcolor=white   style=filled  ]
"VarAccess[60]" [label="VarAccess\n < a >", style= dotted   fillcolor="#eeeeee" fontcolor="#aaaaaa"  ]
"IntegerLiteral[61]" [label="IntegerLiteral\n < 5 >", fillcolor=white   style=filled  ]
"Exit[20]" [label="Exit\n ", fillcolor=white   style=filled  ]
"CompilationUnit[2]" -> "List[3]" [style=dashed, color=gray]
"List[7]" -> "Modifier[8]" [style=dashed, color=gray]
"Modifiers[6]" -> "List[7]" [style=dashed, color=gray]
"ClassDecl[5]" -> "Modifiers[6]" [style=dashed, color=gray]
"ClassDecl[5]" -> "Opt[9]" [style=dashed, color=gray]
"ClassDecl[5]" -> "List[10]" [style=dashed, color=gray]
"MethodDecl[12]" -> "Entry[13]" [style=dashed, color=gray]
"Modifiers[14]" -> "List[15]" [style=dashed, color=gray]
"MethodDecl[12]" -> "Modifiers[14]" [style=dashed, color=gray]
"MethodDecl[12]" -> "PrimitiveTypeAccess[16]" [style=dashed, color=gray]
"MethodDecl[12]" -> "List[17]" [style=dashed, color=gray]
"MethodDecl[12]" -> "List[18]" [style=dashed, color=gray]
"Modifiers[23]" -> "List[24]" [style=dashed, color=gray]
"VarDeclStmt[22]" -> "Modifiers[23]" [style=dashed, color=gray]
"VarDeclStmt[22]" -> "PrimitiveTypeAccess[25]" [style=dashed, color=gray]
"VariableDeclarator[27]" -> "List[28]" [style=dashed, color=gray]
"Opt[29]" -> "IntegerLiteral[30]" [style=dashed, color=gray]
"VariableDeclarator[27]" -> "Opt[29]" [style=dashed, color=gray]
"List[26]" -> "VariableDeclarator[27]" [style=dashed, color=gray]
"VarDeclStmt[22]" -> "List[26]" [style=dashed, color=gray]
"List[21]" -> "VarDeclStmt[22]" [style=dashed, color=gray]
"AssignSimpleExpr[32]" -> "VarAccess[33]" [style=dashed, color=gray]
"AssignSimpleExpr[32]" -> "IntegerLiteral[34]" [style=dashed, color=gray]
"SwitchStmt[31]" -> "AssignSimpleExpr[32]" [style=dashed, color=gray]
"ConstCase[37]" -> "IntegerLiteral[38]" [style=dashed, color=gray]
"List[36]" -> "ConstCase[37]" [style=dashed, color=gray]
"AssignSimpleExpr[42]" -> "VarAccess[43]" [style=dashed, color=gray]
"AssignSimpleExpr[42]" -> "IntegerLiteral[44]" [style=dashed, color=gray]
"ExprStmt[41]" -> "AssignSimpleExpr[42]" [style=dashed, color=gray]
"List[40]" -> "ExprStmt[41]" [style=dashed, color=gray]
"Block[39]" -> "List[40]" [style=dashed, color=gray]
"List[36]" -> "Block[39]" [style=dashed, color=gray]
"AddExpr[46]" -> "IntegerLiteral[47]" [style=dashed, color=gray]
"AddExpr[46]" -> "IntegerLiteral[48]" [style=dashed, color=gray]
"ConstCase[45]" -> "AddExpr[46]" [style=dashed, color=gray]
"List[36]" -> "ConstCase[45]" [style=dashed, color=gray]
"AssignSimpleExpr[50]" -> "VarAccess[51]" [style=dashed, color=gray]
"AssignSimpleExpr[50]" -> "IntegerLiteral[52]" [style=dashed, color=gray]
"ExprStmt[49]" -> "AssignSimpleExpr[50]" [style=dashed, color=gray]
"List[36]" -> "ExprStmt[49]" [style=dashed, color=gray]
"AssignSimpleExpr[54]" -> "VarAccess[55]" [style=dashed, color=gray]
"AssignSimpleExpr[54]" -> "IntegerLiteral[56]" [style=dashed, color=gray]
"ExprStmt[53]" -> "AssignSimpleExpr[54]" [style=dashed, color=gray]
"List[36]" -> "ExprStmt[53]" [style=dashed, color=gray]
"List[36]" -> "DefaultCase[57]" [style=dashed, color=gray]
"AssignSimpleExpr[59]" -> "VarAccess[60]" [style=dashed, color=gray]
"AssignSimpleExpr[59]" -> "IntegerLiteral[61]" [style=dashed, color=gray]
"ExprStmt[58]" -> "AssignSimpleExpr[59]" [style=dashed, color=gray]
"List[36]" -> "ExprStmt[58]" [style=dashed, color=gray]
"Block[35]" -> "List[36]" [style=dashed, color=gray]
"SwitchStmt[31]" -> "Block[35]" [style=dashed, color=gray]
"List[21]" -> "SwitchStmt[31]" [style=dashed, color=gray]
"Block[20]" -> "List[21]" [style=dashed, color=gray]
"Opt[19]" -> "Block[20]" [style=dashed, color=gray]
"MethodDecl[12]" -> "Opt[19]" [style=dashed, color=gray]
"MethodDecl[12]" -> "Exit[20]" [style=dashed, color=gray]
"List[11]" -> "MethodDecl[12]" [style=dashed, color=gray]
"ClassDecl[5]" -> "List[11]" [style=dashed, color=gray]
"List[4]" -> "ClassDecl[5]" [style=dashed, color=gray]
"CompilationUnit[2]" -> "List[4]" [style=dashed, color=gray]
"List[1]" -> "CompilationUnit[2]" [style=dashed, color=gray]
"Program[0]" -> "List[1]" [style=dashed, color=gray]
"Exit[20]" -> "AssignSimpleExpr[59]" [color=red, constraint=false]
"AssignSimpleExpr[59]" -> "Exit[20]" [color=blue, constraint=false, xlabel=" "] 
"AssignSimpleExpr[59]" -> "IntegerLiteral[61]" [color=red, constraint=false]
"IntegerLiteral[61]" -> "AssignSimpleExpr[59]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[61]" -> "DefaultCase[57]" [color=red, constraint=false]
"DefaultCase[57]" -> "IntegerLiteral[61]" [color=blue, constraint=false, xlabel=" "] 
"DefaultCase[57]" -> "ConstCase[45]" [color=red, constraint=false]
"DefaultCase[57]" -> "AssignSimpleExpr[54]" [color=red, constraint=false]
"AssignSimpleExpr[54]" -> "DefaultCase[57]" [color=blue, constraint=false, xlabel=" "] 
"AssignSimpleExpr[54]" -> "IntegerLiteral[56]" [color=red, constraint=false]
"IntegerLiteral[56]" -> "AssignSimpleExpr[54]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[56]" -> "AssignSimpleExpr[50]" [color=red, constraint=false]
"AssignSimpleExpr[50]" -> "IntegerLiteral[56]" [color=blue, constraint=false, xlabel=" "] 
"AssignSimpleExpr[50]" -> "IntegerLiteral[52]" [color=red, constraint=false]
"IntegerLiteral[52]" -> "AssignSimpleExpr[50]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[52]" -> "AssignSimpleExpr[42]" [color=red, constraint=false]
"IntegerLiteral[52]" -> "ConstCase[45]" [color=red, constraint=false]
"AssignSimpleExpr[42]" -> "IntegerLiteral[52]" [color=blue, constraint=false, xlabel=" "] 
"AssignSimpleExpr[42]" -> "IntegerLiteral[44]" [color=red, constraint=false]
"IntegerLiteral[44]" -> "AssignSimpleExpr[42]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[44]" -> "ConstCase[37]" [color=red, constraint=false]
"ConstCase[45]" -> "IntegerLiteral[52]" [color=blue, constraint=false, xlabel="T "] 
"ConstCase[45]" -> "DefaultCase[57]" [color=blue, constraint=false, xlabel="F "] 
"ConstCase[45]" -> "AddExpr[46]" [color=red, constraint=false]
"AddExpr[46]" -> "ConstCase[45]" [color=blue, constraint=false, xlabel=" "] 
"AddExpr[46]" -> "IntegerLiteral[48]" [color=red, constraint=false]
"IntegerLiteral[48]" -> "AddExpr[46]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[48]" -> "IntegerLiteral[47]" [color=red, constraint=false]
"IntegerLiteral[47]" -> "IntegerLiteral[48]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[47]" -> "ConstCase[37]" [color=red, constraint=false]
"ConstCase[37]" -> "IntegerLiteral[44]" [color=blue, constraint=false, xlabel="T "] 
"ConstCase[37]" -> "IntegerLiteral[47]" [color=blue, constraint=false, xlabel="F "] 
"ConstCase[37]" -> "AssignSimpleExpr[32]" [color=red, constraint=false]
"AssignSimpleExpr[32]" -> "ConstCase[37]" [color=blue, constraint=false, xlabel=" "] 
"AssignSimpleExpr[32]" -> "IntegerLiteral[34]" [color=red, constraint=false]
"IntegerLiteral[34]" -> "AssignSimpleExpr[32]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[34]" -> "VariableDeclarator[27]" [color=red, constraint=false]
"VariableDeclarator[27]" -> "IntegerLiteral[34]" [color=blue, constraint=false, xlabel=" "] 
"VariableDeclarator[27]" -> "IntegerLiteral[30]" [color=red, constraint=false]
"IntegerLiteral[30]" -> "VariableDeclarator[27]" [color=blue, constraint=false, xlabel=" "] 
"IntegerLiteral[30]" -> "Entry[13]" [color=red, constraint=false]
"Entry[13]" -> "IntegerLiteral[30]" [color=blue, constraint=false, xlabel=" "] 
"List[3]" -> "List[4]" [style=invis]
"Modifiers[6]" -> "Opt[9]" -> "List[10]" -> "List[11]" [style=invis]
"Entry[13]" -> "Modifiers[14]" -> "PrimitiveTypeAccess[16]" -> "List[17]" -> "List[18]" -> "Opt[19]" -> "Exit[20]" [style=invis]
"VarDeclStmt[22]" -> "SwitchStmt[31]" [style=invis]
"Modifiers[23]" -> "PrimitiveTypeAccess[25]" -> "List[26]" [style=invis]
"List[28]" -> "Opt[29]" [style=invis]
"AssignSimpleExpr[32]" -> "Block[35]" [style=invis]
"VarAccess[33]" -> "IntegerLiteral[34]" [style=invis]
"ConstCase[37]" -> "Block[39]" -> "ConstCase[45]" -> "ExprStmt[49]" -> "ExprStmt[53]" -> "DefaultCase[57]" -> "ExprStmt[58]" [style=invis]
"VarAccess[43]" -> "IntegerLiteral[44]" [style=invis]
"IntegerLiteral[47]" -> "IntegerLiteral[48]" [style=invis]
"VarAccess[51]" -> "IntegerLiteral[52]" [style=invis]
"VarAccess[55]" -> "IntegerLiteral[56]" [style=invis]
"VarAccess[60]" -> "IntegerLiteral[61]" [style=invis]

subgraph cluster_legend {
{node [style=filled, fillcolor=1, colorscheme="pastel13"]
Nodes [label="Total Nr. Nodes
63", fillcolor=1]
Edges [label="Total Nr. Edges
104", fillcolor=1]
NodesCFG [label="CFG Nr. Nodes
20", fillcolor=3]
EdgesCFG [label="CFG Nr. Edges
21", fillcolor=3]
Nodes-> "Program[0]" -> NodesCFG  [style="invis"]
Edges -> "Program[0]" ->EdgesCFG [style="invis"]}
label = "Statistics of the framework: NEXTFramework"
style="solid"
ranksep=0.05
nodesep=0.01
labelloc = b
len=2
}}